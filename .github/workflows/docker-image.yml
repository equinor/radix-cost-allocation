name: Docker Image CI

on:
  push:
    branches: [ master ]

jobs:
  build-deploy-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: |
          IMAGE_TAG = ${GITHUB_REF##*/}-${{ github.sha }}  
          docker build -t radixdev.azurecr.io/radix-cost-exporter:$IMAGE_TAG .
      - uses: azure/docker-login@v1
        with:
          login-server: radixdev.azurecr.io
          username: ${{ secrets.DEV_REGISTRY_USERNAME }}
          password: ${{ secrets.DEV_REGISTRY_PASSWORD }}
      - name: push to radixdev
        run: |
          IMAGE_TAG = ${GITHUB_REF##*/}-${{ github.sha }}
          docker push radixdev.azurecr.io/radix-cost-exporter:$IMAGE_TAG
  deploy-db-arm-template:
    runs-on: ubuntu-latest
    env:
      DEPLOY_NAME: radix-cost-db-deploy
      RESOURCE_GROUP: common
    steps:
      - uses: actions/checkout@v2
      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: deploy-arm-template
        run: |
          az deployment group create -g $RESOURCE_GROUP -n $DEPLOY_NAME \
            --template-file ./azure-infrastructure/azuredeploy.json \
            --parameters sqlAdministratorLoginPassword=${{ secrets.DB_PASSWORD }}
      - name: apply-sql-script
        shell: pwsh
        run: |
          Install-Module -Name SqlServer
          Import-Module SqlServer

          Invoke-Sqlcmd -ConnectionString ${{â€¯secrets.AZURE_SQL_CONNECTION_STRING }} -Query $changeTables -InputFile ./azure-infrastructure/createTables.sql