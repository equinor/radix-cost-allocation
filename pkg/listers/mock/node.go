// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/listers/node.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockNodeLister is a mock of NodeLister interface.
type MockNodeLister struct {
	ctrl     *gomock.Controller
	recorder *MockNodeListerMockRecorder
}

// MockNodeListerMockRecorder is the mock recorder for MockNodeLister.
type MockNodeListerMockRecorder struct {
	mock *MockNodeLister
}

// NewMockNodeLister creates a new mock instance.
func NewMockNodeLister(ctrl *gomock.Controller) *MockNodeLister {
	mock := &MockNodeLister{ctrl: ctrl}
	mock.recorder = &MockNodeListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNodeLister) EXPECT() *MockNodeListerMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockNodeLister) List() []*v1.Node {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]*v1.Node)
	return ret0
}

// List indicates an expected call of List.
func (mr *MockNodeListerMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockNodeLister)(nil).List))
}
