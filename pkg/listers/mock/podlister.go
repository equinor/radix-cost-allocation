// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/listers/podlister.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockPodLister is a mock of PodLister interface.
type MockPodLister struct {
	ctrl     *gomock.Controller
	recorder *MockPodListerMockRecorder
}

// MockPodListerMockRecorder is the mock recorder for MockPodLister.
type MockPodListerMockRecorder struct {
	mock *MockPodLister
}

// NewMockPodLister creates a new mock instance.
func NewMockPodLister(ctrl *gomock.Controller) *MockPodLister {
	mock := &MockPodLister{ctrl: ctrl}
	mock.recorder = &MockPodListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPodLister) EXPECT() *MockPodListerMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockPodLister) List() []*v1.Pod {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]*v1.Pod)
	return ret0
}

// List indicates an expected call of List.
func (mr *MockPodListerMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockPodLister)(nil).List))
}
