// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/listers/containerbulkdto.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	repository "github.com/equinor/radix-cost-allocation/pkg/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockContainerBulkDtoLister is a mock of ContainerBulkDtoLister interface.
type MockContainerBulkDtoLister struct {
	ctrl     *gomock.Controller
	recorder *MockContainerBulkDtoListerMockRecorder
}

// MockContainerBulkDtoListerMockRecorder is the mock recorder for MockContainerBulkDtoLister.
type MockContainerBulkDtoListerMockRecorder struct {
	mock *MockContainerBulkDtoLister
}

// NewMockContainerBulkDtoLister creates a new mock instance.
func NewMockContainerBulkDtoLister(ctrl *gomock.Controller) *MockContainerBulkDtoLister {
	mock := &MockContainerBulkDtoLister{ctrl: ctrl}
	mock.recorder = &MockContainerBulkDtoListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContainerBulkDtoLister) EXPECT() *MockContainerBulkDtoListerMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockContainerBulkDtoLister) List() []repository.ContainerBulkDto {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]repository.ContainerBulkDto)
	return ret0
}

// List indicates an expected call of List.
func (mr *MockContainerBulkDtoListerMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockContainerBulkDtoLister)(nil).List))
}
