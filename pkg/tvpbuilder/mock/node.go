// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/tvpbuilder/node.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	repository "github.com/equinor/radix-cost-allocation/pkg/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockNodeBulkTvpBuilder is a mock of NodeBulkTvpBuilder interface.
type MockNodeBulkTvpBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockNodeBulkTvpBuilderMockRecorder
}

// MockNodeBulkTvpBuilderMockRecorder is the mock recorder for MockNodeBulkTvpBuilder.
type MockNodeBulkTvpBuilderMockRecorder struct {
	mock *MockNodeBulkTvpBuilder
}

// NewMockNodeBulkTvpBuilder creates a new mock instance.
func NewMockNodeBulkTvpBuilder(ctrl *gomock.Controller) *MockNodeBulkTvpBuilder {
	mock := &MockNodeBulkTvpBuilder{ctrl: ctrl}
	mock.recorder = &MockNodeBulkTvpBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNodeBulkTvpBuilder) EXPECT() *MockNodeBulkTvpBuilderMockRecorder {
	return m.recorder
}

// Build mocks base method.
func (m *MockNodeBulkTvpBuilder) Build() ([]repository.NodeBulkTvp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build")
	ret0, _ := ret[0].([]repository.NodeBulkTvp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Build indicates an expected call of Build.
func (mr *MockNodeBulkTvpBuilderMockRecorder) Build() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockNodeBulkTvpBuilder)(nil).Build))
}
